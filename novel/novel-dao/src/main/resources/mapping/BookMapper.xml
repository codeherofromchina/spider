<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="novel.dao.mapper.BookMapper" >
  <resultMap id="BaseResultMap" type="novel.dao.model.Book" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="alias" property="alias" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="intro" property="intro" jdbcType="VARCHAR" />
    <result column="desc" property="desc" jdbcType="VARCHAR" />
    <result column="cover_photo" property="coverPhoto" jdbcType="VARCHAR" />
    <result column="sources" property="sources" jdbcType="VARCHAR" />
    <result column="sources_id" property="sourcesId" jdbcType="VARCHAR" />
    <result column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="book_types_id" property="bookTypesId" jdbcType="INTEGER" />
    <result column="word_count" property="wordCount" jdbcType="INTEGER" />
    <result column="stat" property="stat" jdbcType="BIT" />
    <result column="mark" property="mark" jdbcType="BIT" />
    <result column="spider_date" property="spiderDate" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, `name`, alias, author, intro, `desc`, cover_photo, sources, sources_id, uuid, book_types_id,
    word_count, stat, mark, spider_date, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="novel.dao.model.BookExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="novel.dao.model.BookExample" >
    delete from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="novel.dao.model.Book" >
    insert into book (id, `name`, alias,
      author, intro, `desc`,
      cover_photo, sources, sources_id, 
      uuid, book_types_id, word_count, 
      stat, mark, spider_date, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{alias,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{intro,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, 
      #{coverPhoto,jdbcType=VARCHAR}, #{sources,jdbcType=VARCHAR}, #{sourcesId,jdbcType=VARCHAR}, 
      #{uuid,jdbcType=VARCHAR}, #{bookTypesId,jdbcType=INTEGER}, #{wordCount,jdbcType=INTEGER}, 
      #{stat,jdbcType=BIT}, #{mark,jdbcType=BIT}, #{spiderDate,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="novel.dao.model.Book" >
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        `name`,
      </if>
      <if test="alias != null" >
        alias,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="intro != null" >
        intro,
      </if>
      <if test="desc != null" >
        `desc`,
      </if>
      <if test="coverPhoto != null" >
        cover_photo,
      </if>
      <if test="sources != null" >
        sources,
      </if>
      <if test="sourcesId != null" >
        sources_id,
      </if>
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="bookTypesId != null" >
        book_types_id,
      </if>
      <if test="wordCount != null" >
        word_count,
      </if>
      <if test="stat != null" >
        stat,
      </if>
      <if test="mark != null" >
        mark,
      </if>
      <if test="spiderDate != null" >
        spider_date,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="alias != null" >
        #{alias,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="intro != null" >
        #{intro,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="coverPhoto != null" >
        #{coverPhoto,jdbcType=VARCHAR},
      </if>
      <if test="sources != null" >
        #{sources,jdbcType=VARCHAR},
      </if>
      <if test="sourcesId != null" >
        #{sourcesId,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="bookTypesId != null" >
        #{bookTypesId,jdbcType=INTEGER},
      </if>
      <if test="wordCount != null" >
        #{wordCount,jdbcType=INTEGER},
      </if>
      <if test="stat != null" >
        #{stat,jdbcType=BIT},
      </if>
      <if test="mark != null" >
        #{mark,jdbcType=BIT},
      </if>
      <if test="spiderDate != null" >
        #{spiderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="novel.dao.model.BookExample" resultType="java.lang.Integer" >
    select count(*) from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update book
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.alias != null" >
        alias = #{record.alias,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null" >
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.intro != null" >
        intro = #{record.intro,jdbcType=VARCHAR},
      </if>
      <if test="record.desc != null" >
        desc = #{record.desc,jdbcType=VARCHAR},
      </if>
      <if test="record.coverPhoto != null" >
        cover_photo = #{record.coverPhoto,jdbcType=VARCHAR},
      </if>
      <if test="record.sources != null" >
        sources = #{record.sources,jdbcType=VARCHAR},
      </if>
      <if test="record.sourcesId != null" >
        sources_id = #{record.sourcesId,jdbcType=VARCHAR},
      </if>
      <if test="record.uuid != null" >
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.bookTypesId != null" >
        book_types_id = #{record.bookTypesId,jdbcType=INTEGER},
      </if>
      <if test="record.wordCount != null" >
        word_count = #{record.wordCount,jdbcType=INTEGER},
      </if>
      <if test="record.stat != null" >
        stat = #{record.stat,jdbcType=BIT},
      </if>
      <if test="record.mark != null" >
        mark = #{record.mark,jdbcType=BIT},
      </if>
      <if test="record.spiderDate != null" >
        spider_date = #{record.spiderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update book
    set id = #{record.id,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      alias = #{record.alias,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      intro = #{record.intro,jdbcType=VARCHAR},
      `desc`` = #{record.desc,jdbcType=VARCHAR},
      cover_photo = #{record.coverPhoto,jdbcType=VARCHAR},
      sources = #{record.sources,jdbcType=VARCHAR},
      sources_id = #{record.sourcesId,jdbcType=VARCHAR},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      book_types_id = #{record.bookTypesId,jdbcType=INTEGER},
      word_count = #{record.wordCount,jdbcType=INTEGER},
      stat = #{record.stat,jdbcType=BIT},
      mark = #{record.mark,jdbcType=BIT},
      spider_date = #{record.spiderDate,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="novel.dao.model.Book" >
    update book
    <set >
      <if test="name != null" >
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="alias != null" >
        alias = #{alias,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="intro != null" >
        intro = #{intro,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="coverPhoto != null" >
        cover_photo = #{coverPhoto,jdbcType=VARCHAR},
      </if>
      <if test="sources != null" >
        sources = #{sources,jdbcType=VARCHAR},
      </if>
      <if test="sourcesId != null" >
        sources_id = #{sourcesId,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null" >
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="bookTypesId != null" >
        book_types_id = #{bookTypesId,jdbcType=INTEGER},
      </if>
      <if test="wordCount != null" >
        word_count = #{wordCount,jdbcType=INTEGER},
      </if>
      <if test="stat != null" >
        stat = #{stat,jdbcType=BIT},
      </if>
      <if test="mark != null" >
        mark = #{mark,jdbcType=BIT},
      </if>
      <if test="spiderDate != null" >
        spider_date = #{spiderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="novel.dao.model.Book" >
    update book
    set `name` = #{name,jdbcType=VARCHAR},
      alias = #{alias,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      intro = #{intro,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=VARCHAR},
      cover_photo = #{coverPhoto,jdbcType=VARCHAR},
      sources = #{sources,jdbcType=VARCHAR},
      sources_id = #{sourcesId,jdbcType=VARCHAR},
      uuid = #{uuid,jdbcType=VARCHAR},
      book_types_id = #{bookTypesId,jdbcType=INTEGER},
      word_count = #{wordCount,jdbcType=INTEGER},
      stat = #{stat,jdbcType=BIT},
      mark = #{mark,jdbcType=BIT},
      spider_date = #{spiderDate,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>